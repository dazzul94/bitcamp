<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="java100.app.dao.MemberDao">

    <resultMap type="member" id="memberMap">
        <id column="no" property="no"/>
        <result column="name" property="name"/>
        <result column="email" property="email"/>
        <result column="pwd" property="password"/>
        <result column="regdt" property="createdDate"/>
    </resultMap>
    
	<select id="findAll" resultMap="memberMap" parameterType="map">
		select no,name,email,regdt from ex_memb

		<if test="name != null">
			<where>
				<foreach collection="names" item="name">
					or name like '${word}%'
				</foreach>
			</where>
		</if>
		order by
		<choose>
			<when test="orderColumn == 'name' and align == 'desc'">
				name desc
			</when>
			<when test="orderColumn == 'name' and align == 'asc'">
				name asc
			</when>
			<when test="orderColumn == 'no' and align == 'desc'">
				no desc
			</when>
			<otherwise>
				no asc
			</otherwise>
		</choose>
		limit #{startIndex}, #{size}
	</select>
	
	<select id="countAll" resultType="int">
        select count(*) from ex_memb
    </select>

	<insert id="insert" parameterType="member">
		insert into ex_memb(name,email,pwd,regdt)
                            values(#{name},#{email},password(#{password}),now())
	</insert>

	<update id="update" parameterType="member">
		update ex_memb set name=#{name},email=#{email},pwd=password(#{password}) where no=#{no}
	</update>

	<delete id="delete" parameterType="int">
		delete from ex_memb where no=#{no}
	</delete>

	<select id="findByNo" resultMap="memberMap" parameterType="int">
        select no,name,email,regdt from ex_memb where no=#{no}
	</select> 
	
	<select id="findByEmailAndPassword" resultMap="memberMap" parameterType="map">
	   select no,name,email,regdt from ex_memb 
	   where email=#{email} and pwd=password(#{password}) 
	</select>
</mapper>  









